<?xml version="1.0" encoding="utf-8"?>
<Project 
  ToolsVersion="12.0" 
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="Build" 
    DependsOnTargets="RefreshEnlistmentInfo" 
    Returns="$(TargetResult)" 
  />
  <Target Name="Clean" >
    <Delete
      Files="
        @(BuildNumberFile);
        @(EnlistmentStatusFile);
        @(EnlistmentRevisionFile);
        @(EnlistmentUrlFile);
      "
    />
  </Target>
  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

  <!--RefreshEnlistmentInfo-->
  <Target
    Name="RefreshEnlistmentInfo"
    DependsOnTargets="
      _GetEnlistmentStatus;
      _GetBuildNumber;
      _GetEnlistmentRevision;
      _GetEnlistmentUrl;
    ">

    <!--propagate $(IsEnlistmentClean)-->
    <PropertyGroup>
      <IsEnlistmentClean Condition="'$(EnlistmentStatus)'=='EnlistmentStatus'">true</IsEnlistmentClean>
      <TargetResult>$(TargetResult)IsEnlistmentClean=$(IsEnlistmentClean);</TargetResult>
    </PropertyGroup>

    <!--if clean, propagate $(BuildNumber), $(EnlistmentRevision), $(EnlistmentUrl)-->
    <PropertyGroup Condition="'$(IsEnlistmentClean)'=='true'">
      <TargetResult>$(TargetResult)BuildNumber=$(BuildNumber);</TargetResult>
      <TargetResult>$(TargetResult)EnlistmentRevision=$(EnlistmentRevision);</TargetResult>
      <TargetResult>$(TargetResult)EnlistmentUrl=$(EnlistmentUrl);</TargetResult>
    </PropertyGroup>

    <!--if dirty, propagate default values for $(BuildNumber), $(EnlistmentRevision), $(EnlistmentUrl)-->
    <Warning
      Condition="'$(IsEnlistmentClean)'!='true'"
      Text="Build identity could not be established because enslitment contains modified, new, or untracked files. See: @(EnlistmentStatusFile)"
    />
    <PropertyGroup Condition="'$(IsEnlistmentClean)'!='true'">
      <TargetResult>$(TargetResult)BuildNumber=$(InvalidBuildNumber);</TargetResult>
      <TargetResult>$(TargetResult)EnlistmentRevision=$(InvalidEnlistmentRevision);</TargetResult>
      <TargetResult>$(TargetResult)EnlistmentUrl=$(InvalidEnlistmentUrl);</TargetResult>
    </PropertyGroup>

  </Target>

  <!--_GetBuildNumber-->
  <Target Name="_GetBuildNumber" >

    <!--create $(BuildByNumberDefaultDir) if no drop dirs exist-->
    <MakeDir Directories="$(BuildByNumberDefaultDir)" Condition="!Exists($(BuildByNumberDefaultDir))" />

    <!--last directory in $(DropDir) + 1-->
    <ItemGroup>
      <_BuildDir Include="$([System.IO.Directory]::GetDirectories($(BuildByNumberDir)))" />
      <_BuildNumbers Include="@(_BuildDir->'%(FileName)')" />
    </ItemGroup>
    <PropertyGroup>
      <_BuildNumbers>@(_BuildNumbers->Reverse())</_BuildNumbers>
      <BuildNumber>$(_BuildNumbers.Split(';')[0])</BuildNumber>
      <BuildNumber>$([MSBuild]::Add(1, $(BuildNumber)))</BuildNumber>
    </PropertyGroup>

    <!--save build number-->
    <MakeDir Directories="@(BuildNumberFile->'%(RootDir)%(Directory)')" />
    <WriteLinesToFile
      File="@(BuildNumberFile)"
      Lines="$(BuildNumber)"
    />
  </Target>
</Project>