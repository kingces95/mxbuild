<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <ResolveMetaReferencesDependsOn>
      _FindBadMetaPlatform;
      _ResolveProjectReferences; <!--primitive-->
      _ResolveSelfReferences; <!--primitive-->
      _ResolveMetaProjectReferencePaths; <!--augmeneted-->
      _ResolveShimPlatform; <!--proxy-->
      _ResolveMetaPlatformGroup; <!--group-->
      $(ResolveMetaReferencesDependsOn);
    </ResolveMetaReferencesDependsOn>
  </PropertyGroup>

  <!--_ResolveMetaProjectReferencePaths-->
  <Target
    Name="_ResolveMetaProjectReferencePaths"
    Condition="'$(IsPrimitivePlatform)'=='true' AND '$(BuildTarget)'=='Compile'"
  >
    <Error
      Condition="'$(IsInVS)'!='true'"
      Text="Platform 'Compile' is only supported when building in VS during intellisesne loading."
    />

    <PropertyGroup>
      <!--
        MS.Common.targets intellisense logic: 
          if isense engine is compiling\initializing then do not compile references 
          and instead change the build target from "compile" to simply "getTargetPath".
          Incidentally, this is also why there is no intellisense for unloaded projects.
          
          if isense is not working then run the following for all dependencies and the 
          project itself and fix any errors:
          
            msbuild /v:m /t:compile /p:IsInVs=true /p:platform=[platform] [/p:verbosity=high]
      -->
      <MetaBuildTarget>GetTargetPath</MetaBuildTarget>
    </PropertyGroup>
  </Target>

  <!--_ResolveProjectReferences-->
  <Target
    Name="_ResolveProjectReferences"
    Condition="'$(IsPrimitivePlatform)'=='true' AND '@(ProjectReference)'!=''"
    Outputs="%(ProjectReference.Identity)"
  >
    <PropertyGroup>
      <_Platform>%(ProjectReference.Platform)</_Platform>
      <_Platform Condition="'$(_Platform)'==''">$(LibraryPlatform)</_Platform>
    </PropertyGroup>
    
    <!--ProjectReference -> MetaReference-->
    <ItemGroup>
      <MetaReference Include="%(ProjectReference.Identity)">
        <ReferenceSource>ProjectReference</ReferenceSource>
        <AdditionalProperties>$(ClearRecursiveFrame)Platform=$(_Platform)</AdditionalProperties>
        <PlatformHint>$(_Platform)</PlatformHint>
        <IncludeInReferences>true</IncludeInReferences>
        <Name>%(ProjectReference.Name)</Name>
        <Project>%(ProjectReference.Project)</Project>
      </MetaReference>
      <ProjectReference Remove="%(ProjectReference.Identity)" />
    </ItemGroup>
  </Target>

  <!--_ResolveSelfReferences-->
  <Target 
    Name="_ResolveSelfReferences"
    Condition="'$(IsPrimitivePlatform)'=='true' AND '@(SelfReference)'!=''"
  >
    <!--SelfReference -> MetaReference-->
    <ItemGroup>
      <MetaReference Include="$(ProjFile)" >
        <ReferenceSource>SelfReference</ReferenceSource>
        <AdditionalProperties>$(ClearRecursiveFrame)Platform=%(SelfReference.Identity)</AdditionalProperties>
        <PlatformHint>%(SelfReference.Identity)</PlatformHint>
        <Name>$(AssemblyName)</Name>
        <IncludeInReferences>true</IncludeInReferences>
      </MetaReference>
    </ItemGroup>
  </Target>

  <!--_ResolveShimPlatform-->
  <Target
    Name="_ResolveShimPlatform"
    Condition="'$(IsShimPlatform)'=='true'"
  >
    <ItemGroup>
      <MetaReference Include="$(ProjFile)">
        <ReferenceSource>ShimReference</ReferenceSource>
        <OutSubDir>$(OutSubDir)</OutSubDir>
        <AdditionalProperties>$(KeepRecursiveFrame)_MetaPlatform=$(MetaPlatform);Platform=$(PrimitivePlatform)</AdditionalProperties>
        <PlatformHint>$(PrimitivePlatform)</PlatformHint>
      </MetaReference>
    </ItemGroup>
  </Target>

  <!--_ResolveMetaPlatformGroup-->
  <Target
    Name="_ResolveMetaPlatformGroup"
    Condition="'@(PlatformGroup->AnyHaveMetadataValue('Identity', '$(MetaPlatform)'))'=='true'"
  >
    <!--Members -> Property-->
    <PropertyGroup>
      <PlatformGroupMembers>@(PlatformGroup->WithMetadataValue('Identity', '$(MetaPlatform)')->'%(Platforms)')</PlatformGroupMembers>
    </PropertyGroup>

    <!--Members -> ItemGroup-->
    <ItemGroup>
      <PlatformGroupMembers Include="$(PlatformGroupMembers)"/>
    </ItemGroup>
    
    <!--Members -> MetaReference-->
    <ItemGroup>
      <MetaReference Include="$(ProjFile)">
        <ReferenceSource>GroupReference</ReferenceSource>
        <AdditionalProperties>$(KeepRecursiveFrame)_MetaPlatform=%(PlatformGroupMembers.Identity);Platform=%(PlatformGroupMembers.Identity)</AdditionalProperties>
        <PlatformHint>%(Identity)</PlatformHint>
      </MetaReference>
    </ItemGroup>
  </Target>

  <!--_FindBadMetaPlatform-->
  <Target
    Name="_FindBadMetaPlatform"
    Condition="'$(IsPrimitivePlatform)'!='true'"
  >
    <ItemGroup>
      <SupportedPlatforms Include="@(PlatformGroup)"/>
      <SupportedPlatforms Include="@(PlatformGroup->'%(Platforms)')"/>
    </ItemGroup>
    <PropertyGroup>
      <SupportedPlatforms>@(SupportedPlatforms->'%(Identity)', ';')</SupportedPlatforms>
    </PropertyGroup>
    
    <Error
      Condition="!$([System.Text.RegularExpressions.Regex]::IsMatch('$(SupportedPlatforms.ToLower())', '(^|;)\s*$(Platform.ToLower())\s*($|;)'))"
      Text="Platform '$(Platform)' is not supported by '$(ProjFile)'."
    />
  </Target>
  
</Project>